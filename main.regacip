$$ types
clasa Nume {
    public x: intreg;
    public y: intreg;
    public y: intreg;
	privat z: intreg;

    public functie hello(x: intreg) -> decimal {
        acesta.x = 5;
        h: intreg;
        h=5;    
    };


    privat functie world(x: intreg) -> decimal {
        w: intreg;
        w=5;    
    };
}

n: intreg;
n: intreg=5;
v: decimal[100];
constanta v1: intreg = 54;
y: intreg;

functie sum(x: intreg, y: intreg) -> intreg {
    s1: intreg;
    s1=5;
    s1=5;
}

functie smth() -> vid {
    s2: intreg;
    s2=5;
    s2=5;
}

functie world() -> vid {}

inceput
    variabilaDinMain: intreg;
    v[5]=4;
    n=5;
    v1=233;

    Nume.z = 5;
    Nume.world();

    daca (x==5) {
        variabilaDinDaca: intreg;
        variabilaDinMain: intreg;
        
        n=5;
    }
    altfel daca(x==10) {
        n=5;
    }
    altfel{
        n=5;
    }

pentru element din vector {
    variabilaDinPentru: intreg;
    x=5;
}

cat_timp (x==5) {
    x=5;
    x=5;
    sparge;
}

hello(5);

hello(5+5);

hello(x);
x=x+5+(f(x*6)-v[5]);

sfarsit